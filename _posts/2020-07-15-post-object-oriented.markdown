---
title:  "객체지향의 사실과 오해(4-1)"
excerpt: "객체지향의 사실과 오해 - 역할, 책임, 협력"
header:
  teaser: /assets/images/object-oriented-cover.jpeg

categories:
  - study
tags:
  - domain
  - object
  
last_modified_at: 2020-07-15T12:00:00+09:00
---

### p.109
- 협력이라는 문맥이 객체의 행동 방식을 결정한다.
- 객체지향 설계의 전체적인 품질을 결정하는 것은 개별 객체의 품질이 아니라 여러 객체들이 모여 이뤄내는 협력의 품질이다.


### p.110
- `협력은 다수의 요청과 응답으로 구성되며 전체적으로 협력은 다수의 연쇄적인 요청과 응답의 흐름으로 구성된다.`


### p.114
- 결국 어떤 등장인물들이 특정한 요청을 받아들일 수 있는 이유는 그 요청에 대해 적절한 방식으로 응답하는 데 필요한 지식과 행동 방식을 가지고 있기 때문이다. 그리고 요청과 응답은 협력에 참여하는 객체가 수행할 책임을 정의한다.
- `객체지향의 세계에서는 어떤 객체가 어떤 요청에 대해 대답해줄 수 있거나, 적절한 행동을 할 의무가 있는 경우 해당 객체가 책임을 가진다고 말한다.`


### p.115
- 책임은 객체지향 설계의 가장 중요한 재료다
- 객체와 책임이 이러지러 부유하는 상황에서 성급하게 구현에 뛰어드는 것은 변경에 취약하고 다양한 협력에 참여할 수 없는 비자율적인 객체를 낳게 된다.
- 객체의 책임은 `객체가 무엇을 알고 있는가` 와 `무엇을 할 수 있는가` 로 구성된다.
    - `하는 것`
        - `객체를 생성하거나 계산을 하는 등의 스스로 하는 것`
        - `다른 객체의 행동을 시작시키는 것`
        - `다른 객체의 활동을 제어하고 조절하는 것`
    - `아는 것`
        - `개인적인 정보에 관해 아는 것`
        - `관련된 객체에 관해 아는 것`
        - `자신이 유도하거나 계산할 수 있는 것에 관해 아는 것`


### p.117
- 책임이 불분명한 객체들은 애플리케이션의 미래 역시 불분명하게 만든다. 명확한 책임이 애플리케이션의 미래를 결정짓는다는 것을 명심하라.
- 책임은 객체의 외부에 제공해 줄 수 있는 정보(아는 것의 측면)와 외부에 제공해 줄 수 있는 서비스(하는 것의 측면)의 목록이다. 따라서 책임은 객체의 공용 인터페이스를 구성한다.
- 객체가 다른 체에 주어진 책임을 수행하도록 요청을 보내는 것을 메시지전송이라고 한다. 메시지를 전송함으로써 협력을 요청하는 객체를 송신자라고 하고 메시지를 받아 요청을 처리하는 객체를 수신자라고 한다.
- 책임이 협력이라는 문맥 속에서 요청을 수신하는 한 쪽의 객체 관점에서 무엇을 할 수 있는지를 나열하는 것이라면 메시지는 협력에 참여하는 두 객체 사이의 관계를 강조한 것이다.


### p.118
- 한 가지 주의할 점은 책임과 메시지의 수준이 같지는 않다는 점이다. 책임은 객체가 협력에 참여하기 위해 수행해야 하는 행위를 상위 수준에서 개략적으로 서술한 것이다. 책임을 결정한 후 실제로 협력을 정제하면서 이를 메시지로 변환할 떄는 하나의 책임이 여러 메시지로 분할되는 것이 일반적이다.
```
협력은 객체간의 요청과 응답이다. 책임 또한 협력 안에서 이루어지는 인터페이스이니 `요청` 과 `응답` 모두 포함한다. 그러므로 요청 메시지의 종류도 다양하고, 응답메시지와 같은 발송 메시지의 종류도 다양할 것이다.
```


### p.119
- 어떤 객체가 수행하는 책임의 집합은 객체가 협력 안에서 수행하는 역할을 암시한다.
- 역할이 재사용 가능하고 유연한 객체지향 설계를 낳는 매우 중요한 구성요소이다.


### p.124
- 역할을 사용하면 여러가지 협력을 모두 포괄할 수 있는 하나의 협력으로 추상화할 수 있다.
- 역할은 협력 내에서 다른 객체로 대체할 수 있음을 나타내는 일종의 표식이다.


### p.125
- 역할을 대체하기 위해서는 각 역할이 수신할 수 있는 메시지를 동일한 방식으로 이해해야 한다.
- 역할을 대체할 수 있는 객체는 동일한 메시지를 이해할 수 있는 객체로 한정된다.


### p.126
- 동일한 역할을 수행할 수 있다는 것은 해당 객체들이 협력 내에서 동일한 책임의 집합을 수행할 수 있다는 것을 의미한다.
- `동일한 역할을 수행하는 객체들이 동일한 메시지를 수신할 수 있기 때문에 동일한 책임을 수행할 수 있다는 것은 매우 중요한 개념이다.`
- `역할의 개념을 사용하면 다음과 같은 장점이 있다.`
    - `단순성(simplicity) : 유사한 협력을 추상화해서 인지 과부화를 줄일 수 있다.`
    - `유연성(flexibility) : 다양한 객체들이 협력에 참여할 수 있기 때문에 협력이 좀 더 유연해진다.`
    - `재사용성(reusability) : 다양한 객체들이 동일한 협력에 참여할 수 있기 때문에 재사용성이 높아진다.`
- 역할의 가장 큰 가치는 하나의 협력 안에 여러 종류의 객체가 참여할 수 있게 함으로써 협력을 추상화 할 수 있다는 것이다.
- 역할을 이용하면 협력을 추상화함으로써 단순화 할 수 있다.


### p.127
- 본질적으로 역할은 다른 객체에 의해 대체 가능함을 의미한다.
- 객체가 역할을 대체하기 위해서는 행동이 호환돼야 한다는 점에 주목하라.
- 객체가 역할을 대체 가능하기 위해서는협력 안에서 역할이 수행하는 모든 책임을 동일하게 수행할 수 있어야 한다.
- 객체가 역할에 주어진 책임 이외에 다른 책임을 수행할 수도 있다는 사실에 주목하라.
- 역할이 협력을 추상적으로 만들 수 있는 이유는 역할 자체가 객체의 추상화이기 때문이다.
- `역할의 대체 가능성은 행위 호환성을 의미하고, 행위 호환성은 동일한 책임의 수행을 의미한다.`